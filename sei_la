
#include <RedBot.h>

RedBotSensor left_sen = RedBotSensor(A8);

RedBotSensor right_sen = RedBotSensor(A5);
//data_sheet
// constants that are used in the code. lineStandard is the level to detect
// if the sensor is on the line or not. If the sensor value is greater than this
// the sensor is above a DARK line.
//
// SPEED sets the nominal speed
//motor esquerdo
#define en1 9
#define in1 8
#define in2 7
//motor direito
#define en2 5
#define in3 4
#define in4 3
int lineStandard = 700;



void setup()
{ pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(en1, OUTPUT);
  pinMode(en2, OUTPUT);
  Serial.begin(9600);
  Serial.println("IR Sensor Readings:: ");
  delay(1000);
}

void loop()
{
  Serial.print(left_sen.read());
  Serial.print("\t");

  Serial.print(right_sen.read());
  Serial.println();
  delay(20);


  //data_sheet

  if ((left_sen.read() < 370 ) && (right_sen.read() < 370))
  {
  
      forward();
      right_sen.read();
      left_sen.read();
   
  }

  if (right_sen.read() > lineStandard)
  { //left

      left();
      right_sen.read();

  
  }
  //data_sheet

  else if (left_sen.read() > lineStandard)
  { //right


      right() ;

      left_sen.read();



  }
  if ((left_sen.read() > lineStandard) && (right_sen.read() > lineStandard) )
  {

   
      forward();
  

  }
  else
  {
    //parte do verdim
    if ((left_sen.read() >=400) && (left_sen.read() <=470))
      {
        left();
        delay(2500);
      }
    
  
}
}

void right() {
  analogWrite(en1,80);
  analogWrite(en2,80);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}
void Stop () {
  analogWrite(en1, 0);
  analogWrite(en2, 0);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}
void left() {
  analogWrite(en1, 90);
  analogWrite(en2, 90);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}
void forward() {
  analogWrite(en1, 80);
  analogWrite(en2, 80);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}
void back(){

   analogWrite(en1, 80);
  analogWrite(en2, 80);
  digitalWrite(in1, LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}
