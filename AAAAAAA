//motor esquerdo
#define en1 9
#define in1 8
#define in2 7
//motor direito
#define en2 5
#define in3 4
#define in4 3

//sensor direito
#define s0d 53
#define s1d 52
#define s2d 51
#define s3d 50
#define outPind 49

//sensor esquerdo
#define s0e 45
#define s1e 44
#define s2e 43
#define s3e 42
#define outPine 41  

// VariÃ¡veis
int redd;
int grnd;
int blud;

int rede;
int grne;
int blue;

String colord ="";
String colore ="";
int count = 0;
long startTiming = 0;
long elapsedTime =0;




void setup() {
//motores
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(en1, OUTPUT);
  pinMode(en2, OUTPUT);

//sensor direito
  pinMode(s0d, OUTPUT);
  pinMode(s1d, OUTPUT);
  pinMode(s2d, OUTPUT);
  pinMode(s3d, OUTPUT);
  pinMode(outPind, INPUT);

//sensor esquerdo
  pinMode(s0e, OUTPUT);
  pinMode(s1e, OUTPUT);
  pinMode(s2e, OUTPUT);
  pinMode(s3e, OUTPUT);
  pinMode(outPine, INPUT);


  digitalWrite(s0d,HIGH);
  digitalWrite(s1d,HIGH);

  digitalWrite(s0e,HIGH);
  digitalWrite(s1e,HIGH);

  Serial.begin(9600);

  startTiming = millis();

  Serial.print("sensor Direito= ");
  Serial.println("Sensor Esquerdo= ");
  delay(1000);
}

void loop() {
  readRGBDireita();
  readRGBEsquerda(); 
 

   if ((redd > 8 && redd < 18 && grnd > 9 && grnd < 19 && blud > 8 && blud < 16) && (rede > 8 && rede < 18 && grne > 9 && grne < 19 && blue > 8 && blue < 16)){

    forward();
   }

   else if(redd > 80 && redd < 125 && grnd > 90 && grnd < 125 && blud > 80 && blud < 125){
      if(rede > 80 && rede < 125 && grne > 90 && grne < 125 && blue > 80 && blue < 125){
        forward();
      }
      else{
        left();
      }
   }

  else if (rede > 80 && rede < 125 && grne > 90 && grne < 125 && blue > 80 && blue < 125){
    if (redd > 80 && redd < 125 && grnd > 90 && grnd < 125 && blud > 80 && blud < 125){
      forward();
    }
    else{
      right();
    }
  }
        //parte do print

    Serial.print("red= ");
    Serial.print(redd);
    Serial.print(rede);
    Serial.print("   green= ");
    Serial.print(grnd);
    Serial.print(grne);
    Serial.print("   blue= ");
    Serial.print(blud);
    Serial.print(blue);
    Serial.print (" - ");
    Serial.print (colord);
    Serial.print (colore);
    Serial.println(" detected");
   }


    

    
void getColorDireita()
{  
  readRGBDireita();
  
        if (redd > 8 && redd < 18 && grnd > 9 && grnd < 19 && blud > 8 && blud < 16) colord = "WHITE";
        
  else if (redd > 80 && redd < 125 && grnd > 90 && grnd < 125 && blud > 80 && blud < 125) colord = "BLACK";

  else if (redd > 50 && redd < 95 && grnd > 35 && grnd < 70 && blud > 45 && blud < 85) colord = "GREEN";
 
  else  colord = "NO_COLOR";
}

void getColorEsquerda()
{  
  readRGBEsquerda();
  
        if (rede > 8 && rede < 18 && grne > 9 && grne < 19 && blue > 8 && blue < 16) colore = "WHITE";
        
  else if (rede > 80 && rede < 125 && grne > 90 && grne < 125 && blue > 80 && blue < 125) colore = "BLACK";

  else if (rede > 50 && rede < 95 && grne > 35 && grne < 70 && blue > 45 && blue   < 85) colore = "GREEN";
 
  else  colore = "NO_COLOR";
}

void readRGBDireita() 
{
  redd = 0;
  grnd = 0;
  blud = 0;
  int n = 10;
  for (int i = 0; i < n; ++i)
  {
    //read red component
    digitalWrite(s2d, LOW);
    digitalWrite(s3d, LOW);
    redd = redd + pulseIn(outPind, LOW);
  
   //read green component
    digitalWrite(s2d, HIGH);
    digitalWrite(s3d, HIGH);
    grnd = grnd + pulseIn(outPind, LOW);
    
   //let's read blue component
    digitalWrite(s2d, LOW);
    digitalWrite(s3d, HIGH);
    blud = blud + pulseIn(outPind, LOW);
  }
  redd = redd/n;
  grnd = grnd/n;
  blud = blud/n;
}

void readRGBEsquerda() 
{
  rede = 0;
  grne = 0;
  blue = 0;
  int n = 10;
  for (int i = 0; i < n; ++i)
  {
    //read red component
    digitalWrite(s2e, LOW);
    digitalWrite(s3e, LOW);
    rede = rede + pulseIn(outPine, LOW);
  
   //read green component
    digitalWrite(s2e, HIGH);
    digitalWrite(s3e, HIGH);
    grne = grne + pulseIn(outPine, LOW);
    
   //let's read blue component
    digitalWrite(s2e, LOW);
    digitalWrite(s3e, HIGH);
    blue = blue + pulseIn(outPine, LOW);
  }
  rede = rede/n;
  grne = grne/n;
  blue = blue/n;
}


void right() {
  analogWrite(en1, 90);
  analogWrite(en2, 90);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}
void Stop () {
  analogWrite(en1, 0);
  analogWrite(en2, 0);
  digitalWrite(in1, LOW);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, LOW);
}
void left() {
  analogWrite(en1, 90);
  analogWrite(en2, 90);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}
void forward() {
  analogWrite(en1, 100);
  analogWrite(en2, 100);
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
}
void back() {

  analogWrite(en1, 80);
  analogWrite(en2, 80);
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}
